#!/bin/sh

set -e -u -o pipefail

etsec_mdio_miimadd="0x2d24528"
etsec_mdio_miimcom="0x2d24524"
etsec_mdio_miimcon="0x2d2452c"
etsec_mdio_miimstat="0x2d24530"
etsec_mdio_miimind="0x2d24534"

bswap32() {
	local value="$1"
	printf "0x%x\n" "$((((${value} & 0xff000000) >> 24) | ((${value} & 0x00ff0000) >> 8) | ((${value} & 0x0000ff00) << 8) | ((${value} & 0x000000ff) << 24)))"
}

etsec_read32() {
	addr="$1"
	printf "0x%x\n" $(bswap32 $(devmem ${addr}))
}

etsec_write32() {
	local addr="$1"
	local value="$2"
	devmem ${addr} 32 $(bswap32 ${value})
}

etsec_wait_until_free() {
	while :; do
		tmp=$(etsec_read32 ${etsec_mdio_miimind})
		busy=$((${tmp} & 0x1))
		notvalid=$(((${tmp} & 0x4) >> 2))
		if [ ${notvalid} = 0 -o ${busy} = 0 ]; then
			break
		fi
		sleep 1
	done
}

etsec_mdio_read() {
	local phy_addr="$1"
	local reg_addr="$2"
	etsec_write32 ${etsec_mdio_miimadd} "$((${phy_addr}<<8 | ${reg_addr}))"
	etsec_write32 ${etsec_mdio_miimcom} "0x00000000" # read_cycle = 0
	etsec_write32 ${etsec_mdio_miimcom} "0x00000001" # read_cycle = 1
	etsec_wait_until_free
	value=$(etsec_read32 ${etsec_mdio_miimstat})
	printf "0x%x\n" ${value}
}

etsec_mdio_write() {
	local phy_addr="$1"
	local reg_addr="$2"
	local value="$3"
	etsec_write32 ${etsec_mdio_miimcom} "0x00000000" # read_cycle = 0
	etsec_write32 ${etsec_mdio_miimadd} "$((${phy_addr}<<8 | ${reg_addr}))"
	etsec_write32 ${etsec_mdio_miimcon} "${value}"
}

usage() {
	echo "Usage:"
	echo " * $0 read <phy_addr> <reg_addr>"
	echo " * $0 write <phy_addr> <reg_addr> <reg_value>"
	exit 1
}

[ $# -lt 1 ] && usage

case "$1" in
read)
	shift
	[ $# -eq 2 ] || usage
	etsec_mdio_read $@
	;;
write)
	shift
	[ $# -eq 3 ] || usage
	etsec_mdio_write $@
	;;
*)
	usage
	;;
esac

